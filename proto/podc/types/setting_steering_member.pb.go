// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: podc/types/setting_steering_member.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	crypto "github.com/reapchain/reapchain-core/proto/podc/crypto"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SettingSteeringMember struct {
	Height                  int64            `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp               time.Time        `protobuf:"bytes,2,opt,name=timestamp,proto3,stdtime" json:"timestamp"`
	CoordinatorPubKey       crypto.PublicKey `protobuf:"bytes,3,opt,name=coordinator_pub_key,json=coordinatorPubKey,proto3" json:"coordinator_pub_key"`
	SteeringMemberAddresses [][]byte         `protobuf:"bytes,4,rep,name=steering_member_addresses,json=steeringMemberAddresses,proto3" json:"steering_member_addresses,omitempty"`
	Signature               []byte           `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *SettingSteeringMember) Reset()         { *m = SettingSteeringMember{} }
func (m *SettingSteeringMember) String() string { return proto.CompactTextString(m) }
func (*SettingSteeringMember) ProtoMessage()    {}
func (*SettingSteeringMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_8409261c9cf211aa, []int{0}
}
func (m *SettingSteeringMember) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SettingSteeringMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SettingSteeringMember.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SettingSteeringMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettingSteeringMember.Merge(m, src)
}
func (m *SettingSteeringMember) XXX_Size() int {
	return m.Size()
}
func (m *SettingSteeringMember) XXX_DiscardUnknown() {
	xxx_messageInfo_SettingSteeringMember.DiscardUnknown(m)
}

var xxx_messageInfo_SettingSteeringMember proto.InternalMessageInfo

func (m *SettingSteeringMember) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *SettingSteeringMember) GetTimestamp() time.Time {
	if m != nil {
		return m.Timestamp
	}
	return time.Time{}
}

func (m *SettingSteeringMember) GetCoordinatorPubKey() crypto.PublicKey {
	if m != nil {
		return m.CoordinatorPubKey
	}
	return crypto.PublicKey{}
}

func (m *SettingSteeringMember) GetSteeringMemberAddresses() [][]byte {
	if m != nil {
		return m.SteeringMemberAddresses
	}
	return nil
}

func (m *SettingSteeringMember) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*SettingSteeringMember)(nil), "podc.types.SettingSteeringMember")
}

func init() {
	proto.RegisterFile("podc/types/setting_steering_member.proto", fileDescriptor_8409261c9cf211aa)
}

var fileDescriptor_8409261c9cf211aa = []byte{
	// 359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x51, 0x3d, 0x6f, 0xdb, 0x30,
	0x10, 0x15, 0x6d, 0xd7, 0xa8, 0x59, 0x2f, 0x55, 0x5b, 0x57, 0x75, 0x0b, 0x59, 0xe8, 0xa4, 0xa5,
	0x24, 0xd0, 0x76, 0xea, 0x56, 0xad, 0x46, 0x0b, 0x57, 0xee, 0x94, 0x45, 0xd0, 0xc7, 0x85, 0x22,
	0x6c, 0x89, 0x02, 0x49, 0x0d, 0xfa, 0x17, 0xfe, 0x09, 0xf9, 0x39, 0x1e, 0x3d, 0x66, 0x4a, 0x02,
	0xfb, 0x8f, 0x04, 0xfa, 0xb0, 0x95, 0x64, 0x7b, 0xf7, 0xf8, 0xee, 0x3d, 0xde, 0x1d, 0x76, 0x0b,
	0x91, 0xc4, 0x54, 0x57, 0x05, 0x28, 0xaa, 0x40, 0x6b, 0x9e, 0xb3, 0x40, 0x69, 0x00, 0x59, 0x83,
	0x0c, 0xb2, 0x08, 0x24, 0x29, 0xa4, 0xd0, 0xc2, 0xc4, 0xb5, 0x92, 0x34, 0xca, 0xf9, 0x7b, 0x26,
	0x98, 0x68, 0x68, 0x5a, 0xa3, 0x56, 0x31, 0x9f, 0x35, 0x5e, 0xb1, 0xac, 0x0a, 0x2d, 0xe8, 0x06,
	0x2a, 0xd5, 0xf1, 0x0b, 0x26, 0x04, 0xdb, 0x02, 0x6d, 0xaa, 0xa8, 0xbc, 0xa6, 0x9a, 0x67, 0xa0,
	0x74, 0x98, 0x15, 0xad, 0xe0, 0xeb, 0xcd, 0x00, 0x7f, 0x58, 0xb7, 0xe1, 0xeb, 0x2e, 0xfb, 0x4f,
	0x13, 0x6d, 0xce, 0xf0, 0x38, 0x05, 0xce, 0x52, 0x6d, 0x21, 0x07, 0xb9, 0x43, 0xbf, 0xab, 0x4c,
	0x0f, 0x4f, 0x2e, 0x26, 0xd6, 0xc0, 0x41, 0xee, 0x9b, 0xef, 0x73, 0xd2, 0xc6, 0x90, 0x73, 0x0c,
	0xf9, 0x7f, 0x56, 0x78, 0xaf, 0xf7, 0x77, 0x0b, 0x63, 0x77, 0xbf, 0x40, 0x7e, 0xdf, 0x66, 0xfe,
	0xc3, 0xef, 0x62, 0x21, 0x64, 0xc2, 0xf3, 0x50, 0x0b, 0x19, 0x14, 0x65, 0x14, 0x6c, 0xa0, 0xb2,
	0x86, 0x8d, 0xdb, 0x67, 0x22, 0x21, 0x2c, 0xe2, 0x34, 0xe4, 0x39, 0x69, 0x27, 0x22, 0xab, 0x32,
	0xda, 0xf2, 0x78, 0x09, 0x95, 0x37, 0xaa, 0xed, 0xfc, 0xb7, 0x4f, 0xba, 0x57, 0x65, 0xb4, 0x84,
	0xca, 0xfc, 0x85, 0x3f, 0xbd, 0x58, 0x5e, 0x10, 0x26, 0x89, 0x04, 0xa5, 0x40, 0x59, 0x23, 0x67,
	0xe8, 0x4e, 0xfd, 0x8f, 0xea, 0xd9, 0x84, 0xbf, 0xcf, 0xcf, 0xe6, 0x17, 0x3c, 0x51, 0x9c, 0xe5,
	0xa1, 0x2e, 0x25, 0x58, 0xaf, 0x1c, 0xe4, 0x4e, 0xfd, 0x9e, 0xf0, 0xfe, 0xee, 0x8f, 0x36, 0x3a,
	0x1c, 0x6d, 0xf4, 0x70, 0xb4, 0xd1, 0xee, 0x64, 0x1b, 0x87, 0x93, 0x6d, 0xdc, 0x9e, 0x6c, 0xe3,
	0xea, 0x27, 0xe3, 0x3a, 0x2d, 0x23, 0x12, 0x8b, 0x8c, 0x5e, 0xfe, 0xdc, 0xa3, 0x6f, 0xb1, 0x90,
	0xdd, 0xea, 0x69, 0x7f, 0xeb, 0x68, 0xdc, 0x30, 0x3f, 0x1e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x44,
	0xa0, 0xe1, 0xe1, 0x00, 0x02, 0x00, 0x00,
}

func (m *SettingSteeringMember) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SettingSteeringMember) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SettingSteeringMember) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signature) > 0 {
		i -= len(m.Signature)
		copy(dAtA[i:], m.Signature)
		i = encodeVarintSettingSteeringMember(dAtA, i, uint64(len(m.Signature)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SteeringMemberAddresses) > 0 {
		for iNdEx := len(m.SteeringMemberAddresses) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.SteeringMemberAddresses[iNdEx])
			copy(dAtA[i:], m.SteeringMemberAddresses[iNdEx])
			i = encodeVarintSettingSteeringMember(dAtA, i, uint64(len(m.SteeringMemberAddresses[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	{
		size, err := m.CoordinatorPubKey.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintSettingSteeringMember(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.Timestamp, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.Timestamp):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintSettingSteeringMember(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x12
	if m.Height != 0 {
		i = encodeVarintSettingSteeringMember(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintSettingSteeringMember(dAtA []byte, offset int, v uint64) int {
	offset -= sovSettingSteeringMember(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SettingSteeringMember) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovSettingSteeringMember(uint64(m.Height))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.Timestamp)
	n += 1 + l + sovSettingSteeringMember(uint64(l))
	l = m.CoordinatorPubKey.Size()
	n += 1 + l + sovSettingSteeringMember(uint64(l))
	if len(m.SteeringMemberAddresses) > 0 {
		for _, b := range m.SteeringMemberAddresses {
			l = len(b)
			n += 1 + l + sovSettingSteeringMember(uint64(l))
		}
	}
	l = len(m.Signature)
	if l > 0 {
		n += 1 + l + sovSettingSteeringMember(uint64(l))
	}
	return n
}

func sovSettingSteeringMember(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSettingSteeringMember(x uint64) (n int) {
	return sovSettingSteeringMember(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SettingSteeringMember) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSettingSteeringMember
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SettingSteeringMember: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SettingSteeringMember: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSettingSteeringMember
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSettingSteeringMember
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSettingSteeringMember
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSettingSteeringMember
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.Timestamp, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoordinatorPubKey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSettingSteeringMember
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSettingSteeringMember
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSettingSteeringMember
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CoordinatorPubKey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SteeringMemberAddresses", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSettingSteeringMember
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSettingSteeringMember
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSettingSteeringMember
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SteeringMemberAddresses = append(m.SteeringMemberAddresses, make([]byte, postIndex-iNdEx))
			copy(m.SteeringMemberAddresses[len(m.SteeringMemberAddresses)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSettingSteeringMember
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSettingSteeringMember
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSettingSteeringMember
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signature = append(m.Signature[:0], dAtA[iNdEx:postIndex]...)
			if m.Signature == nil {
				m.Signature = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSettingSteeringMember(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSettingSteeringMember
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSettingSteeringMember(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSettingSteeringMember
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSettingSteeringMember
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSettingSteeringMember
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSettingSteeringMember
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSettingSteeringMember
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSettingSteeringMember
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSettingSteeringMember        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSettingSteeringMember          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSettingSteeringMember = fmt.Errorf("proto: unexpected end of group")
)
